---
# tasks file for roles/ec2


  - name: Create Instances
    ec2:
      region: "{{ aws_region | default('eu-west-1') }}"
      image: "{{ item.image | default(default_ami_id) }}"
      instance_type: "{{ item.instance_type | default(default_instance_type) }}"
      assign_public_ip: "{{ item.assign_public_ip | default('no') }}"
      key_name: "{{ item.key_name | default(default_key)}}"
      instance_tags: {Name: "{{ item.tag_Name }}", environment: "{{ env_name }}", group: "{{ item.tag_group }}"}
      vpc_subnet_id: "{{ item.vpc_subnet_id }}"
      group_id: "{{ item.group_id | default(default_group_id) }}"
      volumes: "{{ item.volumes | default(default_volumes) }}"
      count_tag: {Name: "{{ item.tag_Name }}", environment: "{{ env_name }}"}
      exact_count: 1
      termination_protection: "{{ instance_termination_protection | default('no') }}"
    with_items: "{{ ec2_instances }}"
    register: ec2

  - name: set_volume_facts
    set_fact:
      vol_info: "{{ vol_info|default([]) + [ {'vol_id': item.tagged_instances[0] | json_query('block_device_mapping.*.volume_id'), 'vol_name':  item.tagged_instances[0].tags.Name} ] }}"
    with_items: "{{ ec2.results }}"

  - name: volumes_info
    debug:
      msg: "{{ vol_info }}"


  - name: Ensure all volumes are tagged
    ec2_tag:
      region: "{{ aws_region | default('eu-west-1') }}"
      resource: "{{ item.1 }}"
      state: present
      tags:
        Name: "{{ item.0.vol_name }}"
        environment: "{{ env_name }}"
    with_subelements:
      - "{{ vol_info }}"
      - vol_id



  - name: Add dns entries
    route53:
      command: create
      zone: "{{ domain }}"
      record: "{{ item.tagged_instances[0].tags.environment }}-{{ item.tagged_instances[0].tags.Name }}.{{ domain }}"
      type: A
      ttl: 7200
      value: "{{ item.tagged_instances[0].private_ip }}"
      wait: no
      wait_timeout: 1
      overwrite: yes
    with_items: "{{ ec2.results }}"




...
